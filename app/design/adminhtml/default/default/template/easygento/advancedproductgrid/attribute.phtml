<?php
/**
 * @license http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 * @author Phuong LE <phuong.le@agence-soon.fr> <@>
 * @copyright Copyright (c) 2017 Agence Soon (http://www.agence-soon.fr)
 */?>
<?php /** @var Easygento_AdvancedProductGrid_Block_Adminhtml_Product_Attribute_Edit_Tab_Attribute $this */ ?>
<div class="entity-edit" id="matage-options-panel">
    <div class="entry-edit-head">
        <h4 class="icon-head head-edit-form fieldset-legend"><?php echo $this->__('Choose attributes to show in Catalog Product Grid') ?></h4>
    </div>
    <div class="box">
        <div class="hor-scroll">
            <table class="dynamic-grid" cellspacing="0"  cellpadding="0">
                <tr id="attribute-options-table">
                    <th><?php echo $this->getStoreAdmin()->getName() ?></th>
                    <th>
                        <?php if (!$this->getReadOnly()):?>
                            <?php echo $this->getAddNewButtonHtml() ?>
                        <?php endif;?>
                    </th>
                </tr>
                <tr class="no-display template" id="row-template">
                    <td><input name="option[value][{{id}}][<?php echo $this->getStoreAdmin()->getId() ?>]" value="{{store<?php echo $this->getStoreAdmin()->getId() ?>}}" class="input-text required-option" type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/></td>
                    <td><input class="input-radio" type="radio" name="default[]" value="{{id}}" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/></td>
                    <td class="a-left">
                        <input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />
                        <?php if (!$this->getReadOnly()):?>
                            <?php echo $this->getDeleteButtonHtml() ?>
                        <?php endif;?>
                    </td>
                </tr>
            </table>
        </div>
        <input type="hidden" id="option-count-check" value="" />
    </div>
</div>

<script type="text/javascript">

    var templateText =
        '<tr class="option-row">'+
        '<td><input name="option[value][{{id}}][0]" value="{{store0}}" class="input-text required-option" type="text" <?php if ($this->getReadOnly()):?> disabled="disabled"<?php endif;?>/><\/td>'+
        '<td class="a-left" id="delete_button_container_{{id}}">'+
        '<input type="hidden" class="delete-flag" name="option[delete][{{id}}]" value="" />'+
        <?php if (!$this->getReadOnly()):?>
        '<?php echo Mage::helper('core')->jsQuoteEscape($this->getDeleteButtonHtml()) ?>'+
        <?php endif;?>
        '<\/td>'+
        '<\/tr>';

    var attributeOption = {
        table : $('attribute-options-table'),
        templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
        templateText : templateText,
        itemCount : 0,
        totalItems : 0,
        isReadOnly: <?php echo (int)$this->getReadOnly(); ?>,
        add : function(data) {
            this.template = new Template(this.templateText, this.templateSyntax);
            var isNewOption = false;
            if(!data.id){
                data = {};
                data.id  = 'option_'+this.itemCount;
                isNewOption = true;
            }

            Element.insert(this.table, {after: this.template.evaluate(data)});
            if (isNewOption && !this.isReadOnly) {
                this.enableNewOptionDeleteButton(data.id);
            }
            this.bindRemoveButtons();
            this.itemCount++;
            this.totalItems++;
            this.updateItemsCountField();
        },
        remove : function(event){
            var element = $(Event.findElement(event, 'tr')); // !!! Button already
            // have table parent in safari
            // Safari workaround
            element.ancestors().each(function(parentItem){
                if (parentItem.hasClassName('option-row')) {
                    element = parentItem;
                    throw $break;
                } else if (parentItem.hasClassName('box')) {
                    throw $break;
                }
            });


            if(element){
                var elementFlags = element.getElementsByClassName('delete-flag');
                if(elementFlags[0]){
                    elementFlags[0].value=1;
                }

                element.addClassName('no-display');
                element.addClassName('template');
                element.hide();
                this.totalItems--;
                this.updateItemsCountField();
            }
        },
        updateItemsCountField: function() {
            if (this.totalItems > 0) {
                $('option-count-check').value = '1';
            } else {
                $('option-count-check').value = '';
            }
        },
        enableNewOptionDeleteButton: function(id) {
            $$('#delete_button_container_' + id + ' button').each(function(button) {
                button.enable();
                button.removeClassName('disabled');
            });
        },
        bindRemoveButtons : function(){
            var buttons = $$('.delete-option');
            for(var i=0;i<buttons.length;i++){
                if(!$(buttons[i]).binded){
                    $(buttons[i]).binded = true;
                    Event.observe(buttons[i], 'click', this.remove.bind(this));
                }
            }
        }

    }

    if($('row-template')){
        $('row-template').remove();
    }
    attributeOption.bindRemoveButtons();
    if($('add_new_option_button')){
        Event.observe('add_new_option_button', 'click', attributeOption.add.bind(attributeOption));
    }
    Validation.addAllThese([
        ['required-option', '<?php echo $this->jsQuoteEscape($this->__('Failed')) ?>', function(v) {
            return !Validation.get('IsEmpty').test(v);
        }]]);
    <?php foreach ($this->getOptionValues() as $_value): ?>
    attributeOption.add(<?php echo $_value->toJson() ?>);
    <?php endforeach; ?>
</script>
